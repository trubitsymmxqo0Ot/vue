const App = {
	data() {
		return{
			title: "Список заметок",
			inputText: 'Введите название заметки',    
			inputValue: '',
			nodes: [],
		}
	},
	methods: {
		handleAddNodes() {
			this.nodes.push(this.inputValue);
			this.inputValue = '';
		},
		deleteNode(idx) {
			this.nodes.splice(idx, 1);
		},
		toUpperCaseMethod(item) {
			return item.toUpperCase();
		}
	},
	computed: {
		doubleNodes() { 
			return this.nodes.length * 2;
		}
	},
	watch: {
		inputValue(value) {
			if(value.length > 10){ //Больше 10 символов мы не сможем написать
				this.inputValue = '';
			}
			console.log('input value changed', value);
		}
	}
}

Vue.createApp(App).mount('#root') 

/*
	Помимо того, что мы можем динамично задавать инлайновые стили, мы также можем динамично задавать и обычные стили внутри тега class. 
	Для этого нам также нужно забайндить атрибут class и далее у нас есть 3 пути как можно реализовать динамику. Я распишу
	сейчас все 3 пути, но в html коде будет описан только последний. Остальные две вариации будут написаны только здесь, начнем:

	1) <span :class="nodes.length > 2 ? 'black' : 'red'">Some Text</span>
	Тут мы не делаем ничего сверхъестественного. Просто по тернарному оператору if else задаем условие, что если nodes.length > 2, тогда 
	класс будет black, если же он меньше, тогда class будет red

	2)<span
		:class="{
			'red': true,
			'bold': nodes.length > 2
		}"
	>
		some text
	</span>

	Тут уже структура немного сложнее, внутри класса мы создали объект, где у нас есть пара: ключ - это наш класс, а значение - это 
	любые данные, которые могут вернуть true или false (включая сами булевые значения). По нашему коду, класс red будет входить 
	в список классов к тегу span всегда, т.к. он имеет true в своем значении. Но класс bold же будет появляться в списке классов 
	только когда nodes.length у нас больше 2, этот пример очень похож на класс, который я реализовал в репозитории Ulbi, там тоже была
	функция classNames, которая принимала в себя объект, в котором пара была такая же, ключ - это наш класс, а значение - это булевый
	тип данных, который определяет, будет ли класс учавствовать в списке классов, относящихся к тегу или нет.

	3)<span
		:class="['bold', {'red': nodes.length > 5}]"
	>
		someText
	  </span>

	Тут структура ещё сильнее усложнилась, теперь мы имеем массив, но что в нем происходит? В этот массив мы можем вписывать классы, 
	которые точно будут учавствовать в списке классов, относящихся к атрибуту span (это наш bold), но также, мы добавили объект,
	внутри которого описали новый класс, который будет добавлен только по условию, если node.length у нас больше 5, то есть, это 
	тот вид записи, который был у нас во втором примере.
	Также, мы можем добавлять несколько записей в массив (имеются ввиду те классы, которые 100% будут в списке классов, а не те, 
	которые добавляются по условию)
*/